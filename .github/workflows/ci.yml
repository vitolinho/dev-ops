name: ci

on:
  push:

jobs:
  lint:
    name: Run golangci-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.x"

      - name: Install golangci-lint
        run: |
          cd api
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.63.4

      - name: Run golangci-lint
        run: |
          cd api
          ~/go/bin/golangci-lint run

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres-test:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: porsche_test
        ports:
          - 5433:5433
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: |
        cd api
        go mod download

    - name: Create .env.test file
      run: |
        cd api
        cat > .env.test << EOF
        DB_HOST=localhost
        DB_USER=postgres
        DB_PASSWORD=postgres
        DB_NAME=porsche_test
        DB_PORT=5433
        DB_TIMEZONE=Europe/Paris
        EOF

    - name: Run tests
      run: |
        cd api
        go test ./... -v -cover

    - name: Generate test coverage report
      run: |
        cd api
        go test ./... -coverprofile=coverage.out
        go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.html 

  client-lint:
    name: Run eslint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: |
          cd client
          npm install -g pnpm

      - name: Install dependencies
        run: |
          cd client
          pnpm install

      - name: Run lint
        run: |
          cd client
          pnpm lint
